Serve HTTP Request
==================
Rino Jose <rjose@linkedin.com>
v0.2, May 17, 2013: Got a simple echo working

Overview
--------
In any tool that I put together, we _will_ need to have a web interface, even if
it's read-only. There has to be some way for other people to see what's going on
in the tool. Ultimately, the architecture for a productionized tool will have
its own web server components. What I want to figure out in this prototype is
how to handle a basic GET request and serve a page.

Risk
----
The risk here is that I'm not sure how all of the HTTP protocol steps work. I
want to figure out how to establish a TCP connection with a client and start
sending data over it. We'll start with a simple echo and then move up to a point
where we can connect with curl and then a browser.


Protos
------
. Echo data to telnet [X][X][]
. Parse HTTP request into headers and a body [][][]
. Respond with headers and an empty body [][]
. Respond with a page [][]
. Convert to threaded version [][][][]

Proto1
~~~~~~
We'll start by pulling over the echo server code from the Stevens book.

* Pass 1
  ** errno, EINTR undeclared. Need to include errno
  ** ':' instead of ';'
  ** INADDR_ANY, LISTENQ undeclared. Had to include netinet/in.h and define
     LISTENQ

* Pass 2
  ** bzero undeclared. Needed to include strings.h
  ** Runtime: can't connect. Forgot to apply *htons* to port.
